#!/bin/bash
function sudo() {
	"$1" "${@:2}" || command sudo "$1" "${@:2}"
}

function pkginfo() {
	pacman -Qi "$1" | grep "$2" | awk '{print $3}'
}

SHOW_HELP=

ARGS=$(getopt -o  h -l help -- "$@")
eval set -- $ARGS
echo "$@"
while [ $# -gt 0 ]
do
	case "$1" in
		-h|--help)
			SHOW_HELP='yes'
			shift
			;;
		--)
			shift
			break
			;;
	esac
done

if [ "$SHOW_HELP" ]
then
	cat '/usr/share/gitetc/help/gitetc-add'
else
	ETCFILES="$(git config gitetc.path || echo "$HOME/.gitetc")"
	mkdir -p "$ETCFILES" && cd "$ETCFILES"

	[ -d '.git' ] || git init

	[ "$(git symbolic-ref --short HEAD)" = upstream ] || git checkout upstream || git checkout -b upstream
	for FILE in "$@"
	do
		FILE="$(realpath "$FILE")"
		FILE="${FILE#/etc/}"
		PACKAGE="$(sudo pacman -Qoq "/etc/$FILE")"
		if [ "$PACKAGE" ]
		then
			mkdir -p "$(dirname "$FILE")"
			VERSION="$(pkginfo "$PACKAGE" 'Version')"
			ARCH="$(pkginfo "$PACKAGE" 'Architecture')"
			tar -xJOf "/var/cache/pacman/pkg/$PACKAGE-$VERSION-$ARCH.pkg.tar.xz" \
				"etc/$FILE" > "$FILE"
			git add "$FILE"
		fi
	done
	git commit -m 'Update Upstream'

	[ "$(git symbolic-ref --short HEAD)" = master ] || git checkout master || git checkout -b master
	git merge -s ours --no-edit upstream

	for FILE in "$@"
	do
		FILE="${FILE#/etc/}"
		mkdir -p "$(dirname "$FILE")"
		sudo cat "/etc/$FILE" > "$FILE"
		git add "$FILE"
	done
	git commit -m 'Update local edits'
fi
